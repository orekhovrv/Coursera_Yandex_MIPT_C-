#include <set>
#include <map>
#include <string>
#include <iostream>

using namespace std;

/*
В этой задаче вам нужно присваивать номера автобусным маршрутам.

А именно, для каждого маршрута, заданного множеством названий остановок, нужно либо выдать новый номер
 (первому маршруту — 1, второму — 2 и т. д.), либо вернуть номер существующего маршрута, которому соответствует такое множество остановок.

В отличие от задачи «Автобусные остановки — 2», наборы остановок, которые можно получить друг из
 друга перестановкой элементов или добавлением/удалением повторяющихся, следует считать одинаковыми.

Формат ввода
Сначала вводится количество запросов Q, затем Q описаний запросов.

Каждый запрос представляет собой положительное количество остановок N, за которым следуют разделённые пробелом
 N названий остановок соответствующего маршрута (не обязательно различных). Названия остановок состоят лишь из латинских букв и символов подчёркивания.

Формат вывода
Выведите ответ на каждый запрос в отдельной строке.

Если маршрут с данным набором остановок уже существует, в ответ на соответствующий запрос выведите Already exists for i,
 где i — номер маршрута с таким набором остановок.
 В противном случае нужно выделить введённому набору остановок новый номер i и вывести его в формате New bus i.
*/

int main() {
    int Q, L;
    int new_route_number = 1;
    map<set<string>, int> routes;

    cin >> Q;

    for (int i = 0; i < Q; ++i) {
        cin >> L;

        string stop;
        set<string> route;
        for (int j = 0; j < L; ++j) {
            cin >> stop;
            route.insert(stop);
        }

        if (routes.count(route) != 0) {
            cout << "Already exists for " << routes[route] << endl;
        } else {
            cout << "New bus " << new_route_number << endl;
            routes[route] = new_route_number;
            ++new_route_number;
        }
    }

    return 0;
}